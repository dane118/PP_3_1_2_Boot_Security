---//ИСПРАВЛЕНО//---
1. жесткого соглашения на счёт числа, в котором именуем пакеты, нет.
Но у тебя есть и множественное число и единственное - придерживайся чего то одного

---//ИСПРАВЛЕНО//---
2. твои классы User и Role реализуют интерфейсы UserDetails и GrantedAuthority, но как реализации используешь не их,
а спринговые - org.springframework.security.core.userdetails.User и SimpleGrantedAuthority. То есть в
методе loadUserByUsername ты можешь возвращать свою сущность user, а в методе getAuthorities (класс User)
возвращать коллекцию своих ролей

---//ИСПРАВЛЕНО//---
3. удаляй неиспользуемые в приложении методы

---//ИСПРАВЛЕНО//---
4. назначение ролей перенеси в сервисный класс (либо реализуй назначение через шаблонизатор)

Пакет model
Класс User

---//ИСПРАВЛЕНО//---
5. не используй стратегию загрузки EAGER для связанных сущностей

---//ИСПРАВЛЕНО//---
6. почему переопределенный метод getUsername возвращает null?

Пакет dao
Класс

Пакет service
Интерфейс RoleService

---//НЕ НАШЕЛ МЕТОДА С СИГНАТУРОЙ public//---
7. для сигнатуры метода модификатор public излишен

Класс UserServiceImpl

---//ИСПРАВЛЕНО//---
8. стоит разделить ответственность класса UserServiceImpl - создать пакет security,
определить класс имплементирующий UserDetailsService, а UserServiceImpl - этот класс будет отвечать
только за бизнес логику

---//ИСПРАВЛЕНО//---
9. инжектируй passwordEncoder в сервисный класс и кодируй пароль